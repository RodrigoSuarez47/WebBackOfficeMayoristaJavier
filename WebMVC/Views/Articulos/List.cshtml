@model IEnumerable<DTOs.ArticuloDTO>
@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Artículos";
}

<h1 class="text-center my-4 animate__animated animate__fadeInDown">
    <i class="bi bi-box-seam"></i> Listado de Artículos
</h1>

<div class="container">
    <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-3 animate__animated animate__fadeInUp">
        <div class="input-group shadow-sm" style="max-width: 400px;">
            <span class="input-group-text"><i class="bi bi-search"></i></span>
            <input type="text" id="searchString" class="form-control" placeholder="Buscar artículo...">
        </div>

        <a class="btn btn-outline-success shadow-sm d-flex align-items-center gap-2" asp-action="Create">
            <i class="bi bi-plus-lg"></i> <span>Agregar Artículo</span>
        </a>
    </div>

    <!-- Contenedor para manejar el overflow con scroll horizontal, si es necesario -->
    <div class="table-container" style="overflow-x: auto; width: 100%;">
        <table class="table table-hover table-striped table-bordered text-center shadow-sm rounded-3" id="articlesTable">
            <thead class="table-dark">
                <tr>
                    <th onclick="sortTable(0, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-hash"></i> Id</span></th>
                    <th class="col-2"><span class="d-flex align-items-center gap-1"><i class="bi bi-card-image"></i> Imagen</span></th>
                    <th onclick="sortTable(2, this)" class="col-3"><span class="d-flex align-items-center gap-1"><i class="bi bi-tag"></i> Nombre</span></th>
                    <th onclick="sortTable(3, this)" class="col-4"><span class="d-flex align-items-center gap-1"><i class="bi bi-card-text"></i> Descripción</span></th>
                    <th onclick="sortTable(4, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-cash"></i> Compra</span></th>
                    <th onclick="sortTable(5, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-cash"></i> Mayor</span></th>
                    <th onclick="sortTable(6, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-cash"></i> Unidad</span></th>
                    <th onclick="sortTable(7, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-cart-plus"></i> Mínimo</span></th>
                    <th onclick="sortTable(8, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-boxes"></i> Stock</span></th>
                    <th onclick="sortTable(9, this)" class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-calendar-x"></i> Vencimiento</span></th>
                    <th class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-eye"></i> Visible</span></th> 
@*                     <th class="col-2"><span class="d-flex align-items-center gap-1"><i class="bi bi-person"></i> Proveedor</span></th> <!-- Nueva columna Proveedor -->
                    <th class="col-2"><span class="d-flex align-items-center gap-1"><i class="bi bi-building"></i> Compañía</span></th> <!-- Nueva columna Compañía --> *@
                    <th class="col-1"><span class="d-flex align-items-center gap-1"><i class="bi bi-gear"></i> Acciones</span></th>
                </tr>
            </thead>

            <tbody id="articlesBody">
                @foreach (var item in Model)
                {
                    <tr class="align-middle animate__animated animate__fadeIn">
                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>
                            <img src="@item.ImageUrl" alt="Imagen de @item.Name" class="img-thumbnail rounded-3 shadow-sm" style="max-width: 60px; max-height: 60px;" />
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td class="text-end">@Html.DisplayFor(modelItem => item.PurchasePrice)</td>
                        <td class="text-end">@Html.DisplayFor(modelItem => item.SalePrice)</td>
                        <td class="text-end">@Html.DisplayFor(modelItem => item.UnitSalePrice)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.MinimumPurchase)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.Stock)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.ExpirationDate)</td>
                        <td class="text-center">
                            @if (item.IsVisible)
                            {
                                <span class="badge bg-success">Sí</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">No</span>
                            }
                        </td>
                        
                        @* <td>@item.Supplier?.Name</td> <!-- Proveedor -->
                        <td>@item.Supplier?.CompanyName</td> <!-- Compañía --> *@
                        <td>
                            <div class="btn-group">
                                <a class="btn btn-sm btn-outline-secondary shadow-sm" asp-action="Edit" asp-route-id="@item.Id">
                                    <i class="bi bi-pencil-square"></i> Editar
                                </a>
                                <button class="btn btn-sm btn-outline-danger shadow-sm delete-btn" data-id="@item.Id">
                                    <i class="bi bi-trash3"></i> Eliminar
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        let lastSortedColumn = null;
        let ascending = true;

        function sortTable(columnIndex, header) {
            var table = document.getElementById("articlesTable");
            var tbody = table.getElementsByTagName("tbody")[0];
            var rows = Array.from(tbody.getElementsByTagName("tr"));

            if (lastSortedColumn === columnIndex) {
                ascending = !ascending;
            } else {
                ascending = true;
            }

            rows.sort(function (a, b) {
                var aText = a.cells[columnIndex].textContent.trim().toLowerCase();
                var bText = b.cells[columnIndex].textContent.trim().toLowerCase();

                if (!isNaN(parseFloat(aText)) && !isNaN(parseFloat(bText))) {
                    return ascending ? aText - bText : bText - aText;
                }
                return ascending ? aText.localeCompare(bText) : bText.localeCompare(aText);
            });

            tbody.innerHTML = "";
            rows.forEach(row => tbody.appendChild(row));

            document.querySelectorAll("th").forEach(th => th.classList.remove("table-secondary"));
            header.classList.add("table-secondary");

            lastSortedColumn = columnIndex;
        }

        document.getElementById('searchString').addEventListener('input', function () {
            var searchString = this.value.toLowerCase();
            var articles = document.querySelectorAll('#articlesBody tr');

            articles.forEach(function (article) {
                var name = article.querySelector('td:nth-child(3)').textContent.toLowerCase();
                var description = article.querySelector('td:nth-child(4)').textContent.toLowerCase();

                article.style.display = (name.includes(searchString) || description.includes(searchString)) ? '' : 'none';
            });
        });

        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function (event) {
                event.preventDefault();
                let articleId = this.getAttribute("data-id");

                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "No podrás revertir esto.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#dc3545",
                    cancelButtonColor: "#6c757d",
                    confirmButtonText: "Sí, eliminar",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        let form = document.createElement("form");
                        form.method = "post";
                        form.action = "/Articulos/Delete";
                        form.style.display = "none";

                        let input = document.createElement("input");
                        input.type = "hidden";
                        input.name = "id";
                        input.value = articleId;

                        form.appendChild(input);
                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            });
        });
    </script>
}
