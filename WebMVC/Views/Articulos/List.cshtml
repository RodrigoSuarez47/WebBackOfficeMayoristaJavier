@model IEnumerable<DTOs.ArticuloDTO>

@{
    ViewData["Title"] = "Artículos";
}
<h1 class="text-center my-4">
    <i class="bi bi-box-seam"></i> Listado de Artículos
</h1>

<div class="container">
    <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-3">
        <div class="input-group shadow-sm" style="max-width: 400px;">
            <span class="input-group-text"><i class="bi bi-search"></i></span>
            <input type="text" id="searchString" class="form-control" placeholder="Buscar artículo...">
        </div>
        <div class="input-group shadow-sm" style="max-width: 300px;">
            <span class="input-group-text"><i class="bi bi-truck"></i></span>
            <!-- Se agregó data-live-search y la clase selectpicker -->
            <select id="filterProvider" class="form-select" data-live-search="true">
                <option value="">Todos los proveedores</option>
                @foreach (var proveedor in ViewBag.Proveedores)
                {
                    @if(ViewBag.ProveedorSeleccionado == proveedor.Id)
                    {
                        <option selected value="@proveedor.Id">@proveedor.Name - @proveedor.CompanyName</option>
                    } else
                    {
                        <option value="@proveedor.Id">@proveedor.Name - @proveedor.CompanyName</option>
                    }
                }
            </select>
        </div>

        <a class="btn btn-outline-success shadow-sm d-flex align-items-center gap-2" asp-action="Create"
           aria-label="Agregar nuevo artículo" title="Agregar Artículo">
            <i class="bi bi-plus-lg"></i> <span>Agregar Artículo</span>
        </a>
    </div>

    <!-- Contenedor para manejar el overflow con scroll horizontal, si es necesario -->
    <div class="table-container" style="overflow-x: auto; width: 100%;">
        <table class="table table-hover table-striped table-bordered text-center shadow-sm rounded-3" id="articlesTable">
            <thead class="table-dark">
                <tr>
                    <th onclick="sortTable(0, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-hash"></i> Id</span>
                    </th>
                    <th class="col-2">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-card-image"></i> Imagen</span>
                    </th>
                    <th onclick="sortTable(2, this)" class="col-3" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-tag"></i> Nombre</span>
                    </th>
                    <th onclick="sortTable(3, this)" class="col-4" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-card-text"></i> Descripción</span>
                    </th>
                    <th onclick="sortTable(4, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-cash-stack"></i> Compra</span>
                    </th>
                    <th onclick="sortTable(5, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-cash-stack"></i> Mayor</span>
                    </th>
                    <th onclick="sortTable(6, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-cash-stack"></i> Unidad</span>
                    </th>
                    <th onclick="sortTable(7, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-cart-plus"></i> Mínimo</span>
                    </th>
                    <th onclick="sortTable(8, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-boxes"></i> Stock</span>
                    </th>
                    <th onclick="sortTable(9, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-calendar-x"></i> Vencimiento</span>
                    </th>
                    <th onclick="sortTable(10, this)" class="col-1" style="cursor:pointer;">
                        <span class="d-flex align-items-center gap-1"><i class="bi bi-eye"></i> Visible</span>
                    </th>
                    <th class="col-1">
                        <span class="d-flex align-items-center justify-content-center gap-1"><i class="bi bi-gear"></i> Acciones</span>
                    </th>
                </tr>
            </thead>
            <tbody id="articlesBody">
                @foreach (var item in Model)
                {
                    <tr data-provider="@item.SupplierId" class="align-middle">
                        <td class="text-center" data-sort="@item.Id">@Html.DisplayFor(modelItem => item.Id)</td>
                        <td class="text-center">
                            <img src="@item.ImageUrl" alt="Imagen de @item.Name" class="img-thumbnail rounded-3 shadow-sm" style="max-width: 60px; max-height: 60px;" loading="lazy" />
                        </td>
                        <td class="text-center" data-sort="@item.Name">@Html.DisplayFor(modelItem => item.Name)</td>
                        <td class="text-center" data-sort="@item.Description">@Html.DisplayFor(modelItem => item.Description)</td>
                        <td class="text-center" data-sort="@item.PurchasePrice">@item.PurchasePrice.ToString("0")</td>
                        <td class="text-center" data-sort="@item.SalePrice">@item.SalePrice.ToString("0")</td>
                        <td class="text-center" data-sort="@item.UnitSalePrice">@item.UnitSalePrice.ToString("0")</td>
                        <td class="text-center" data-sort="@item.MinimumPurchase">@Html.DisplayFor(modelItem => item.MinimumPurchase)</td>
                        <td class="text-center" data-sort="@item.Stock">@Html.DisplayFor(modelItem => item.Stock)</td>
                        <td class="text-center" data-sort="@item.ExpirationDate">@Html.DisplayFor(modelItem => item.ExpirationDate)</td>
                        <td class="text-center" data-sort="@(item.IsVisible ? 1 : 0)">
                            <button class="btn btn-sm @(item.IsVisible ? "btn-success" : "btn-danger") shadow-sm"
                                    data-id="@item.Id"
                                    onclick="toggleVisibility(this)"
                                    aria-label="@(item.IsVisible ? "Ocultar artículo" : "Mostrar artículo")"
                                    title="@(item.IsVisible ? "Ocultar" : "Mostrar")">
                                <i class="bi @(item.IsVisible ? "bi-eye" : "bi-eye-slash")"></i>
                            </button>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <button class="btn btn-warning shadow-sm"
                                        data-id="@item.Id"
                                        data-purchase="@item.PurchasePrice"
                                        data-sale="@item.SalePrice"
                                        data-unit="@item.UnitSalePrice"
                                        onclick="modifyPrices(this)"
                                        aria-label="Actualizar precios de @item.Name"
                                        title="Actualizar Precios">
                                    <i class="bi bi-cash-stack"></i>
                                </button>
                                <button class="btn btn-primary shadow-sm"
                                        data-id="@item.Id"
                                        data-stock="@item.Stock"
                                        onclick="modifyStock(this)"
                                        aria-label="Modificar stock de @item.Name"
                                        title="Modificar Stock">
                                    <i class="bi bi-boxes"></i>
                                </button>
                                <a class="btn btn-secondary shadow-sm"
                                   asp-action="Edit" asp-route-id="@item.Id"
                                   aria-label="Editar artículo @item.Name"
                                   title="Editar Artículo">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <button class="btn btn-danger shadow-sm delete-btn"
                                        data-id="@item.Id"
                                        aria-label="Eliminar artículo @item.Name"
                                        title="Eliminar Artículo">
                                    <i class="bi bi-trash3"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<!-- Modal de Modificar Stock sin backdrop -->
<div class="modal fade" id="stockModal" tabindex="-1" aria-labelledby="stockModalLabel" aria-hidden="true" data-bs-backdrop="false">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title text-center w-100" id="stockModalLabel">
                    <i class="bi bi-boxes me-2"></i>Modificar Stock
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="stockForm" method="post" action="@Url.Action("ModificarStock", "Articulos")">
                    <input type="hidden" id="articleId" name="articleId" />
                    <div class="mb-3">
                        <label for="newStock" class="form-label">
                            <i class="bi bi-box me-1"></i>
                            Stock Actual
                        </label>
                        <input type="number" class="form-control" id="newStock" name="newStock" required min="0" placeholder="Ingrese stock" />
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-outline-primary" aria-label="Confirmar modificación de stock" title="Modificar Stock">
                            <i class="bi bi-save me-1"></i> Modificar
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer justify-content-center">
                <small class="text-muted">
                    <i class="bi bi-info-circle"></i> Asegúrate de ingresar un valor válido.
                </small>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Actualizar Precios sin backdrop -->
<div class="modal fade" id="priceModal" tabindex="-1" aria-labelledby="priceModalLabel" aria-hidden="true" data-bs-backdrop="false">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title text-center w-100" id="priceModalLabel">
                    <i class="bi bi-cash-stack me-2"></i> Actualizar Precios
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="priceForm" method="post" action="@Url.Action("ModificarPrecios", "Articulos")">
                    <input type="hidden" id="priceArticleId" name="articleId" />
                    <div class="mb-3">
                        <label for="purchasePrice" class="form-label">
                            <i class="bi bi-cash"></i> Precio de Compra
                        </label>
                        <input type="number" class="form-control" id="purchasePrice" name="purchasePrice" required min="0" placeholder="Ingrese precio de compra" />
                    </div>
                    <div class="mb-3">
                        <label for="salePrice" class="form-label">
                            <i class="bi bi-cash-stack"></i> Precio de Venta
                        </label>
                        <input type="number" class="form-control" id="salePrice" name="salePrice" required min="0" placeholder="Ingrese precio de venta" />
                    </div>
                    <div class="mb-3">
                        <label for="unitSalePrice" class="form-label">
                            <i class="bi bi-cash-stack"></i> Precio por Unidad
                        </label>
                        <input type="number" class="form-control" id="unitSalePrice" name="unitSalePrice" required min="0" placeholder="Ingrese precio por unidad" />
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-outline-warning" aria-label="Confirmar actualización de precios" title="Actualizar Precios">
                            <i class="bi bi-save me-1"></i> Actualizar
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer justify-content-center">
                <small class="text-muted">
                    <i class="bi bi-info-circle"></i> Asegúrate de ingresar valores válidos.
                </small>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            if ($('.selectpicker').data('selectpicker')) {
                $('.selectpicker').selectpicker('destroy'); // Destruye la instancia previa si existe
            }
            $('.selectpicker').selectpicker(); // Vuelve a inicializar SelectPicker
        });

    // Función para la búsqueda por nombre y descripción
    function searchArticles() {
        var searchString = document.getElementById('searchString').value.toLowerCase();
        var articles = document.querySelectorAll('#articlesBody tr');

        articles.forEach(function (article) {
            var name = article.querySelector('td:nth-child(3)').textContent.toLowerCase();
            var description = article.querySelector('td:nth-child(4)').textContent.toLowerCase();
            var matchesSearch = name.includes(searchString) || description.includes(searchString);

            article.style.display = matchesSearch ? '' : 'none';
        });
    }

    // Asignar la función de búsqueda al input de búsqueda
    document.getElementById('searchString').addEventListener('input', searchArticles);

    // Función para filtrar artículos por proveedor llamando al controlador
    function filterByProvider() {
        var selectedProvider = document.getElementById('filterProvider').value;

        // Si se selecciona "Todos los proveedores", recargar el listado completo
        if (selectedProvider === "") {
            window.location.href = '/Articulos/List';
            return;
        }

        // Crear formulario fantasma
        var form = document.createElement('form');
        form.method = 'GET';
        form.action = '/Articulos/FiltrarArticulosPorProveedor';

        var providerInput = document.createElement('input');
        providerInput.type = 'hidden';
        providerInput.name = 'proveedorId';
        providerInput.value = selectedProvider;

        form.appendChild(providerInput);
        document.body.appendChild(form);
        form.submit();
    }

    // Asignar la función de filtrado al select de proveedores
    document.getElementById('filterProvider').addEventListener('change', filterByProvider);


        // Función que se llama al hacer clic en el botón para modificar el stock
        function modifyStock(button) {
            var articleId = button.getAttribute("data-id");
            var currentStock = button.getAttribute("data-stock");

            // Llenar el formulario con los datos actuales
            document.getElementById("articleId").value = articleId;
            document.getElementById("newStock").value = currentStock;

            // Mostrar el modal usando Bootstrap 5
            var stockModal = new bootstrap.Modal(document.getElementById('stockModal'));
            stockModal.show();
        }

        // Función para llenar el modal de precios y mostrarlo
        function modifyPrices(button) {
            var articleId = button.getAttribute("data-id");
            var purchasePrice = button.getAttribute("data-purchase");
            var salePrice = button.getAttribute("data-sale");
            var unitSalePrice = button.getAttribute("data-unit");

            // Llenar los campos del formulario
            document.getElementById("priceArticleId").value = articleId;
            document.getElementById("purchasePrice").value = purchasePrice;
            document.getElementById("salePrice").value = salePrice;
            document.getElementById("unitSalePrice").value = unitSalePrice;

            // Mostrar el modal usando Bootstrap 5
            var priceModal = new bootstrap.Modal(document.getElementById('priceModal'));
            priceModal.show();
        }

        // Cambiar visibilidad de artículo
        function toggleVisibility(button) {
            var articleId = button.getAttribute("data-id");
            var currentVisibility = button.classList.contains("btn-success"); // Visible si tiene btn-success

            Swal.fire({
                title: currentVisibility ? "¿Desactivar visibilidad?" : "¿Activar visibilidad?",
                text: currentVisibility ? "Este artículo dejará de ser visible." : "Este artículo será visible para los usuarios.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: currentVisibility ? "#dc3545" : "#28a745",
                cancelButtonColor: "#6c757d",
                confirmButtonText: currentVisibility ? "Desactivar" : "Activar",
                cancelButtonText: "Cancelar"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Crear un formulario para enviar la solicitud al controlador
                    let form = document.createElement("form");
                    form.method = "post";
                    form.action = "/Articulos/CambiarVisibilidad";
                    form.style.display = "none";

                    let input = document.createElement("input");
                    input.type = "hidden";
                    input.name = "id";  // Parámetro del controlador
                    input.value = articleId;

                    form.appendChild(input);
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }

        // Ordenamiento de la tabla utilizando data-sort si existe
        let lastSortedColumn = null;
        let ascending = true;

        function sortTable(columnIndex, header) {
            var table = document.getElementById("articlesTable");
            var tbody = table.getElementsByTagName("tbody")[0];
            var rows = Array.from(tbody.getElementsByTagName("tr"));

            if (lastSortedColumn === columnIndex) {
                ascending = !ascending;
            } else {
                ascending = true;
            }

            rows.sort(function (a, b) {
                var cellA = a.cells[columnIndex];
                var cellB = b.cells[columnIndex];

                // Se intenta leer el atributo data-sort, si no existe se usa el texto
                var aValue = cellA.getAttribute("data-sort") || cellA.textContent.trim().toLowerCase();
                var bValue = cellB.getAttribute("data-sort") || cellB.textContent.trim().toLowerCase();

                // Si ambos valores son numéricos, comparar como números
                if (!isNaN(parseFloat(aValue)) && !isNaN(parseFloat(bValue))) {
                    return ascending ? parseFloat(aValue) - parseFloat(bValue) : parseFloat(bValue) - parseFloat(aValue);
                }
                // Comparación de texto
                return ascending ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);
            });

            // Reordenar las filas
            tbody.innerHTML = "";
            rows.forEach(row => tbody.appendChild(row));

            // Marcar la cabecera activa
            document.querySelectorAll("th").forEach(th => th.classList.remove("table-secondary"));
            header.classList.add("table-secondary");

            lastSortedColumn = columnIndex;
        }

        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function (event) {
                event.preventDefault();
                let articleId = this.getAttribute("data-id");

                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "No podrás revertir esto.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#dc3545",
                    cancelButtonColor: "#6c757d",
                    confirmButtonText: "Sí, eliminar",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        let form = document.createElement("form");
                        form.method = "post";
                        form.action = "/Articulos/Delete";
                        form.style.display = "none";

                        let input = document.createElement("input");
                        input.type = "hidden";
                        input.name = "id";
                        input.value = articleId;

                        form.appendChild(input);
                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            });
        });
    </script>
    <style>
        /* Ajustar el fondo del modal para que sea menos oscuro */
        .modal-backdrop.show {
            background-color: rgba(0, 0, 0, 0.3) !important;
        }
    </style>
}
