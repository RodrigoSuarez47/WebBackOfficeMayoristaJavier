@model DTOs.ArticuloDTO
@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Editar Artículo";
}

<h1 class="text-center my-4 animate__animated animate__fadeInDown">
    <i class="bi bi-box-seam"></i> @ViewData["Title"]
</h1>
<h4 class="text-center text-secondary animate__animated animate__fadeInUp">Modificar los datos del Artículo</h4>
<hr />

<div class="row justify-content-center animate__animated animate__fadeIn">
    <div class="col-md-8 col-lg-6 shadow-lg p-4 rounded bg-light">
        <form asp-action="Edit" method="post" id="editForm">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

            <!-- Campos del Formulario -->
            <div class="mb-3">
                <label asp-for="Id" class="form-label fw-bold">
                    <i class="bi bi-hash"></i> ID del Artículo
                </label>
                <input asp-for="Id" class="form-control" disabled />
            </div>

            <!-- Imagen -->
            <div class="text-center">
                <div id="imagePreview" class="my-3">
                    <img src="@Model.ImageUrl" alt="Imagen del Artículo" class="img-thumbnail shadow-sm rounded" style="max-width: 150px; max-height: 150px; object-fit: contain; transition: opacity 0.3s;" />
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="ImageUrl" class="form-label fw-bold">
                    <i class="bi bi-image"></i> Imagen
                </label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-link-45deg"></i></span>
                    <input asp-for="ImageUrl" class="form-control" placeholder="URL de la imagen" onchange="loadImage()" />
                </div>
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Name" class="form-label fw-bold">
                    <i class="bi bi-tag"></i> Nombre
                </label>
                <input asp-for="Name" class="form-control" placeholder="Nombre del artículo" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label fw-bold">
                    <i class="bi bi-card-text"></i> Descripción
                </label>
                <input asp-for="Description" class="form-control" placeholder="Descripción del artículo" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="PurchasePrice" class="form-label fw-bold">
                        <i class="bi bi-cash"></i> Precio de Compra
                    </label>
                    <input asp-for="PurchasePrice" class="form-control" placeholder="Precio de compra" />
                    <span asp-validation-for="PurchasePrice" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="SalePrice" class="form-label fw-bold">
                        <i class="bi bi-cash-stack"></i> Precio de Venta
                    </label>
                    <input asp-for="SalePrice" class="form-control" placeholder="Precio de venta" />
                    <span asp-validation-for="SalePrice" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="SaleUnitPrice" class="form-label fw-bold">
                        <i class="bi bi-cart-plus"></i> Precio por Unidad
                    </label>
                    <input asp-for="SaleUnitPrice" class="form-control" placeholder="Precio por unidad" />
                    <span asp-validation-for="SaleUnitPrice" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="MinimumPurchase" class="form-label fw-bold">
                        <i class="bi bi-box"></i> Compra Mínima
                    </label>
                    <input asp-for="MinimumPurchase" class="form-control" placeholder="Cantidad mínima para comprar" />
                    <span asp-validation-for="MinimumPurchase" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Stock" class="form-label fw-bold">
                        <i class="bi bi-boxes"></i> Stock Disponible
                    </label>
                    <input asp-for="Stock" class="form-control" placeholder="Cantidad en stock" />
                    <span asp-validation-for="Stock" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="ExpirationDate" class="form-label fw-bold">
                        <i class="bi bi-calendar-x"></i> Fecha de Expiración
                    </label>
                    <input asp-for="ExpirationDate" type="date" class="form-control" />
                    <span asp-validation-for="ExpirationDate" class="text-danger"></span>
                </div>
            </div>

            <!-- Venta por Peso -->
            <div class="mb-3 form-check">
                <input asp-for="IsSoldByWeight" class="form-check-input" type="checkbox" />
                <label class="form-check-label" for="IsSoldByWeight">
                    <i class="bi bi-weight me-1"></i> Venta por Peso
                </label>
            </div>

            <!-- Visibilidad -->
            <div class="mb-3 form-check">
                <input asp-for="IsVisible" class="form-check-input" type="checkbox" />
                <label class="form-check-label" for="IsVisible">
                    <i class="bi bi-weight me-1"></i> Visible para Clientes
                </label>
            </div>

            <!-- Botón de Enviar -->
            <div class="text-center">
                <button type="submit" class="btn btn-outline-success w-100 fw-bold">
                    <i class="bi bi-save"></i> Guardar Cambios
                </button>
            </div>

            <span class="text-danger d-block text-center mt-2">@ViewBag.Mensaje</span>
        </form>
    </div>
</div>

<div class="text-center mt-4">
    <a asp-action="List" class="btn btn-outline-secondary animate__animated animate__fadeInUp">
        <i class="bi bi-arrow-left"></i> Volver
    </a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        // Función para previsualizar la imagen al cambiar la URL
        function loadImage() {
            var imageUrl = document.querySelector('input[name="ImageUrl"]').value;
            var img = document.querySelector('#imagePreview img');

            if (imageUrl.trim() !== "") {
                img.src = imageUrl;
                img.style.opacity = "0.5";
                setTimeout(() => img.style.opacity = "1", 300); // Animación de transición
            }
        }

        document.getElementById("editForm").addEventListener("submit", function (event) {
            event.preventDefault();

            let nombre = document.querySelector('input[name="Name"]').value.trim();
            let descripcion = document.querySelector('input[name="Description"]').value.trim();
            let imageUrl = document.querySelector('input[name="ImageUrl"]').value.trim();
            let purchasePrice = parseFloat(document.querySelector('input[name="PurchasePrice"]').value);
            let salePrice = parseFloat(document.querySelector('input[name="SalePrice"]').value);
            let unitPrice = parseFloat(document.querySelector('input[name="SaleUnitPrice"]').value);
            let minimumPurchase = parseFloat(document.querySelector('input[name="MinimumPurchase"]').value);
            let stock = parseFloat(document.querySelector('input[name="Stock"]').value);
            let expirationDate = document.querySelector('input[name="ExpirationDate"]').value;

            let warningMessage = "";

            // Validaciones
            if (!nombre) {
                Swal.fire("Error", "Debe ingresar el nombre del artículo.", "error");
                return false;
            }
            if (!descripcion) {
                Swal.fire("Error", "Debe ingresar la descripción del artículo.", "error");
                return false;
            }
            if (!imageUrl) {
                Swal.fire("Error", "Debe ingresar la URL de la imagen.", "error");
                return false;
            }
            if (!isValidUrl(imageUrl)) {
                Swal.fire("Error", "La URL de la imagen no es válida.", "error");
                return false;
            }
            if (isNaN(purchasePrice) || purchasePrice <= 0) {
                Swal.fire("Error", "Precio Compra debe ser mayor a 0.", "error");
                return false;
            }
            if (isNaN(salePrice) || salePrice <= 0) {
                Swal.fire("Error", "Precio Venta debe ser mayor a 0.", "error");
                return false;
            }
            if (isNaN(unitPrice) || unitPrice <= 0) {
                Swal.fire("Error", "Precio Unitario debe ser mayor a 0.", "error");
                return false;
            }
            if (isNaN(minimumPurchase) || minimumPurchase <= 0) {
                Swal.fire("Error", "Compra Mínima debe ser mayor a 0.", "error");
                return false;
            }

            if(expirationDate && new Date(expirationDate) < new Date()){
                 Swal.fire("Error", "Fecha de Vencimiento anterior a hoy. El artículo está vencido", "error");
                return false;
            }

            // Acumular advertencias (no impiden el envío)
            let warnings = [];
            if (isNaN(stock) || stock === 0) {
                warnings.push("El stock ingresado es 0.");
            }
            if (!expirationDate) {
                warnings.push("No ingresó fecha de vencimiento.");
            }

            // Si hay advertencias, mostrar confirmación
            if (warnings.length > 0) {
                event.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Advertencia',
                    html: warnings.join('<br>') + '<br><br>¿Desea continuar de todas formas?',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, continuar',
                    confirmButtonColor: "#198754",
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Éxito',
                            text: 'Artículo editado exitosamente.',
                            confirmButtonColor: "#198754"
                        }).then(() => {
                            event.target.submit();
                        });
                    }
                });
                return false;
            }

            // Enviar el formulario si todo está correcto
            event.target.submit();

        });

        // Verificar URL válida
        function isValidUrl(string) {
            try {
                new URL(string);
                return true;
            } catch (_) {
                return false;
            }
        }
    </script>
}
